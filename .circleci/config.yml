version: 2.1
commands:
  deployment_setup:
    steps:
      - run:
          name: "Set the Tier"
          command: |
            TIER=DEV
            if [[ ${CIRCLE_BRANCH} =~ bq-table-search-(prod|test|uat).* ]]; then
              TIER=$(awk -F- '{print toupper($4)}' \<<< ${CIRCLE_BRANCH})
            fi
            echo "export TIER=${TIER}" >> $BASH_ENV
            echo "Tier was identified as ${TIER} for branch ${CIRCLE_BRANCH}"
      - run:
          name: "Assign Tier-level vars"
          command: |
            DEP_BUCKET=${DEPLOYMENT_BUCKET_DEV}
            DEP_PROJECT_ID=${DEPLOYMENT_PROJECT_ID_DEV}
            if [ ! -f deployment.key.json ]; then
              echo "Deployment JSON keyfile not found - loading from CircleCI."
              KEY=${DEPLOYMENT_KEY_BQ_TABLE_SEARCH_DEV}
            else
              echo "Deployment JSON keyfile found."
              KEY="NA"
            fi
            CLIENT_EMAIL=${DEPLOYMENT_CLIENT_EMAIL_BQ_TABLE_SEARCH_DEV}
            if [[ ${TIER} == "PROD" ]]; then
              KEY=${DEPLOYMENT_KEY_BQ_TABLE_SEARCH_PROD}
              CLIENT_EMAIL=${DEPLOYMENT_CLIENT_EMAIL_BQ_TABLE_SEARCH_PROD}
              DEP_BUCKET=${DEPLOYMENT_BUCKET_PROD}
              DEP_PROJECT_ID=${DEPLOYMENT_PROJECT_ID_PROD}
            elif [[ ${TIER} == "UAT" ]]; then
              KEY=${DEPLOYMENT_KEY_BQ_TABLE_SEARCH_UAT}
              CLIENT_EMAIL=${DEPLOYMENT_CLIENT_EMAIL_BQ_TABLE_SEARCH_UAT}
              DEP_BUCKET=${DEPLOYMENT_BUCKET_UAT}
              DEP_PROJECT_ID=${DEPLOYMENT_PROJECT_ID_UAT}
            elif [[ ${TIER} == "TEST" ]]; then
              KEY=${DEPLOYMENT_KEY_BQ_TABLE_SEARCH_TEST}
              CLIENT_EMAIL=${DEPLOYMENT_CLIENT_EMAIL_BQ_TABLE_SEARCH_TEST}
              DEP_BUCKET=${DEPLOYMENT_BUCKET_TEST}
              DEP_PROJECT_ID=${DEPLOYMENT_PROJECT_ID_TEST}
            elif [[ ${TIER} == "DEV" ]]; then
              echo "Using default deployment configuration for tier ${TIER}"
            else
              echo "[ERROR] - Unrecognized tier: ${TIER} - exiting."
              exit 1
            fi
            echo "export DEPLOYMENT_KEY=\"${KEY}\"" >> $BASH_ENV
            echo "export DEPLOYMENT_CLIENT_EMAIL=${CLIENT_EMAIL}" >> $BASH_ENV
            echo "export DEPLOYMENT_BUCKET=${DEP_BUCKET}" >> $BASH_ENV
            echo "export DEPLOYMENT_PROJECT_ID=${DEP_PROJECT_ID}" >> $BASH_ENV
  auth:
    steps:
      - run:
          name: "Service Account Auth and Project Settings"
          command: |
            sudo -E /bin/bash ./shell/gcloud_authenticate.sh
            sudo -E /bin/bash ./shell/gcloud-pull-dep-files.sh
            xargs -a deployment_config.txt -I{} echo "export {}" >> $BASH_ENV
  install_cloud_sdk:
    steps:
      - run:
          name: "Install CloudSDK"
          command: |
            echo "export CLOUDSDK_CORE_DISABLE_PROMPTS=1" >> $BASH_ENV
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update && sudo apt-get -y install google-cloud-sdk

jobs:
  build_job:
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    working_directory: ~/BigQueryTableSearch
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Set Python Path
          command: |
            echo "export PYTHONPATH=/home/circleci/${CIRCLE_PROJECT_REPONAME}/lib" >> $BASH_ENV
            echo "Testing"
      - restore_cache:
          keys:
            - bq-table-search-lib-{{ checksum "requirements.txt" }}

      - install_cloud_sdk
      - deployment_setup
      - auth
      - run:
          name: Install Dependencies
          command: |
            sudo -E /bin/bash ./shell/install-deps.sh
      - run:
          name: Compare Config
          command: |
            sudo -E /bin/bash ./shell/compareConfig.sh "gs://${DEPLOYMENT_BUCKET}/bqs_deployment_config.txt"
            sudo -E /bin/bash ./shell/compareConfig.sh "gs://${DEPLOYMENT_BUCKET}/bqs_app.yaml"
      - save_cache:
          key: bq-table-search-{{ epoch }}
          paths:
            - ./templates
            - ./shell
            - ./static
            - ./LICENSE
            - ./main.py
            - ./requirements.txt

  deploy_job:
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    working_directory: ~/BigQueryTableSearch
    docker:
      - image: cimg/python:3.12
    steps:
      - restore_cache:
          keys:
            - bq-table-search-
      - install_cloud_sdk
      - deployment_setup
      - auth
      - deploy:
          command: |
            sudo -E rm -rf ./lib
            sudo -E gcloud app deploy --verbosity=debug ./app.yaml --service-account=${WEB_RUNTIME_SA_NAME} --quiet
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_job
      - deploy_job:
          requires:
            - build_job
          filters:
            branches:
              only:
                - main
                - bq-table-search-test
                - bq-table-search-prod
                - bq-table-search-uat
